<?php
/**
 * Mr ECU - Categories Tablosu D√ºzeltme
 * Eksik kolonlarƒ± ekler ve tabloyu g√ºncellemek i√ßin
 */

require_once 'config/database.php';

echo "<h2>Categories Tablosu D√ºzeltme ƒ∞≈ülemi</h2>";
echo "<hr>";

try {
    echo "<h3>1. Mevcut Tablo Yapƒ±sƒ±nƒ± Kontrol Ediliyor...</h3>";
    
    // Mevcut kolonlarƒ± kontrol et
    $stmt = $pdo->query("DESCRIBE categories");
    $columns = $stmt->fetchAll();
    $existingColumns = array_column($columns, 'Field');
    
    echo "Mevcut kolonlar: " . implode(', ', $existingColumns) . "<br><br>";
    
    echo "<h3>2. Eksik Kolonlar Ekleniyor...</h3>";
    
    // Eksik kolonlarƒ± tanƒ±mla
    $requiredColumns = [
        'is_featured' => "ADD COLUMN is_featured TINYINT(1) DEFAULT 0 AFTER sort_order",
        'meta_title' => "ADD COLUMN meta_title VARCHAR(255) AFTER is_active",
        'meta_description' => "ADD COLUMN meta_description TEXT AFTER meta_title"
    ];
    
    $addedColumns = 0;
    
    foreach ($requiredColumns as $column => $sql) {
        if (!in_array($column, $existingColumns)) {
            try {
                $pdo->exec("ALTER TABLE categories $sql");
                echo "‚úÖ '$column' kolonu eklendi<br>";
                $addedColumns++;
            } catch (PDOException $e) {
                echo "‚ö†Ô∏è '$column' kolonu eklenirken hata: " . $e->getMessage() . "<br>";
            }
        } else {
            echo "‚ö†Ô∏è '$column' kolonu zaten mevcut<br>";
        }
    }
    
    echo "<br>";
    echo "<h3>3. ƒ∞ndexler Ekleniyor...</h3>";
    
    // Gerekli indexleri ekle
    $indexes = [
        'idx_is_featured' => "CREATE INDEX idx_is_featured ON categories (is_featured)",
        'idx_slug' => "CREATE INDEX idx_slug ON categories (slug)",
        'idx_is_active' => "CREATE INDEX idx_is_active ON categories (is_active)",
        'idx_sort_order' => "CREATE INDEX idx_sort_order ON categories (sort_order)"
    ];
    
    foreach ($indexes as $indexName => $sql) {
        try {
            $pdo->exec($sql);
            echo "‚úÖ '$indexName' indexi eklendi<br>";
        } catch (PDOException $e) {
            if (strpos($e->getMessage(), 'Duplicate key name') !== false) {
                echo "‚ö†Ô∏è '$indexName' indexi zaten mevcut<br>";
            } else {
                echo "‚ö†Ô∏è '$indexName' indexi eklenirken hata: " . $e->getMessage() . "<br>";
            }
        }
    }
    
    echo "<br>";
    echo "<h3>4. √ñrnek Kategoriler Ekleniyor...</h3>";
    
    // √ñrnek kategori verileri
    $sampleCategories = [
        [
            'name' => 'ECU Programlama Cihazlarƒ±',
            'slug' => 'ecu-programlama-cihazlari',
            'description' => 'Profesyonel ECU programlama ve chip tuning cihazlarƒ±. OBD ve Bench modu desteƒüi ile geni≈ü ara√ß uyumluluƒüu sunan g√ºvenilir √ß√∂z√ºmler.',
            'meta_title' => 'ECU Programlama Cihazlarƒ± | Profesyonel Chip Tuning Ara√ßlarƒ±',
            'meta_description' => 'ECU programlama cihazlarƒ± ile ara√ß performansƒ±nƒ±zƒ± artƒ±rƒ±n. AutoTuner, KESS, KTM Flash ve daha fazlasƒ±. Profesyonel kalitede √ºr√ºnler.',
            'is_featured' => 1,
            'sort_order' => 1
        ],
        [
            'name' => 'OBD Tarayƒ±cƒ±larƒ±',
            'slug' => 'obd-tarayicilari',
            'description' => 'OBD2 tarayƒ±cƒ±larƒ± ve te≈ühis ara√ßlarƒ±. Ara√ß hatalarƒ±nƒ± tespit etmek ve temizlemek i√ßin professional √ß√∂z√ºmler.',
            'meta_title' => 'OBD Tarayƒ±cƒ±larƒ± | Ara√ß Te≈ühis Ara√ßlarƒ±',
            'meta_description' => 'OBD2 tarayƒ±cƒ±larƒ± ile ara√ß hatalarƒ±nƒ± tespit edin. Professional te≈ühis ara√ßlarƒ± ve okuyucular. G√ºvenilir kalitede √ºr√ºnler.',
            'is_featured' => 1,
            'sort_order' => 2
        ],
        [
            'name' => 'Immobilizer Ara√ßlarƒ±',
            'slug' => 'immobilizer-araclari',
            'description' => 'Immobilizer bypass ve programlama ara√ßlarƒ±. G√ºvenlik sistemleri ile ilgili profesyonel √ß√∂z√ºmler.',
            'meta_title' => 'Immobilizer Ara√ßlarƒ± | G√ºvenlik Sistemi √á√∂z√ºmleri',
            'meta_description' => 'Immobilizer bypass ve programlama ara√ßlarƒ±. G√ºvenlik sistemi √ß√∂z√ºmleri i√ßin profesyonel ara√ßlar. G√ºvenilir teknoloji.',
            'is_featured' => 0,
            'sort_order' => 3
        ],
        [
            'name' => 'TCU Programlama',
            'slug' => 'tcu-programlama',
            'description' => 'TCU (Transmission Control Unit) programlama ara√ßlarƒ±. ≈ûanzƒ±man kontrol√º ve optimizasyon √ß√∂z√ºmleri.',
            'meta_title' => 'TCU Programlama Ara√ßlarƒ± | ≈ûanzƒ±man Kontrol √únitesi',
            'meta_description' => 'TCU programlama ara√ßlarƒ± ile ≈üanzƒ±man performansƒ±nƒ±zƒ± optimize edin. Transmission control unit √ß√∂z√ºmleri.',
            'is_featured' => 0,
            'sort_order' => 4
        ],
        [
            'name' => 'Kilometre Sƒ±fƒ±rlama',
            'slug' => 'kilometre-sifirlama',
            'description' => 'Kilometre d√ºzeltme ve sƒ±fƒ±rlama ara√ßlarƒ±. Dashboard ve ECU kilometre verilerini d√ºzenlemek i√ßin professional √ß√∂z√ºmler.',
            'meta_title' => 'Kilometre Sƒ±fƒ±rlama Ara√ßlarƒ± | Odomet D√ºzeltme',
            'meta_description' => 'Kilometre sƒ±fƒ±rlama ve d√ºzeltme ara√ßlarƒ±. Dashboard kilometre verilerini d√ºzenlemek i√ßin g√ºvenilir √ß√∂z√ºmler.',
            'is_featured' => 0,
            'sort_order' => 5
        ],
        [
            'name' => 'Yazƒ±lƒ±m ve Lisanslar',
            'slug' => 'yazilim-ve-lisanslar',
            'description' => 'ECU programlama yazƒ±lƒ±mlarƒ± ve lisanslar. √áe≈üitli markalar i√ßin √∂zel yazƒ±lƒ±m √ß√∂z√ºmleri ve g√ºncellemeler.',
            'meta_title' => 'ECU Yazƒ±lƒ±m ve Lisanslar | Programlama Yazƒ±lƒ±mlarƒ±',
            'meta_description' => 'ECU programlama yazƒ±lƒ±mlarƒ± ve lisanslar. AutoTuner, KESS, KTM Flash yazƒ±lƒ±mlarƒ± ve g√ºncellemeleri.',
            'is_featured' => 1,
            'sort_order' => 6
        ]
    ];
    
    $addedCategories = 0;
    foreach ($sampleCategories as $category) {
        try {
            $stmt = $pdo->prepare("SELECT id FROM categories WHERE slug = ?");
            $stmt->execute([$category['slug']]);
            
            if (!$stmt->fetch()) {
                $stmt = $pdo->prepare("INSERT INTO categories (name, slug, description, meta_title, meta_description, is_featured, is_active, sort_order) VALUES (?, ?, ?, ?, ?, ?, 1, ?)");
                $stmt->execute([
                    $category['name'], 
                    $category['slug'], 
                    $category['description'], 
                    $category['meta_title'], 
                    $category['meta_description'], 
                    $category['is_featured'], 
                    $category['sort_order']
                ]);
                $addedCategories++;
                echo "‚úÖ " . $category['name'] . " kategorisi eklendi<br>";
            } else {
                echo "‚ö†Ô∏è " . $category['name'] . " kategorisi zaten mevcut<br>";
            }
        } catch(PDOException $e) {
            echo "‚ùå {$category['name']} kategorisi eklenirken hata: " . $e->getMessage() . "<br>";
        }
    }
    
    echo "<br>";
    echo "<h3>5. Son Durum Kontrol√º...</h3>";
    
    // Kategorileri listele
    $stmt = $pdo->query("SELECT name, slug, is_featured, is_active FROM categories ORDER BY sort_order");
    $categories = $stmt->fetchAll();
    
    echo "<table border='1' cellpadding='10' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr style='background: #f8f9fa;'><th>Kategori Adƒ±</th><th>Slug</th><th>√ñne √áƒ±kan</th><th>Aktif</th></tr>";
    
    foreach ($categories as $cat) {
        $featured = $cat['is_featured'] ? '‚≠ê Evet' : 'Hayƒ±r';
        $active = $cat['is_active'] ? '‚úÖ Aktif' : '‚ùå Pasif';
        echo "<tr>";
        echo "<td>" . htmlspecialchars($cat['name']) . "</td>";
        echo "<td>" . htmlspecialchars($cat['slug']) . "</td>";
        echo "<td>$featured</td>";
        echo "<td>$active</td>";
        echo "</tr>";
    }
    echo "</table>";
    
    echo "<br>";
    echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 20px 0;'>";
    echo "<h4 style='color: #155724;'>‚úÖ D√ºzeltme Tamamlandƒ±!</h4>";
    echo "<p style='color: #155724;'>Categories tablosu ba≈üarƒ±yla g√ºncellenmi≈ü ve √∂rnek veriler eklenmi≈ütir.</p>";
    echo "<ul style='color: #155724;'>";
    echo "<li>‚úÖ Eksik kolonlar eklendi</li>";
    echo "<li>‚úÖ Gerekli indexler olu≈üturuldu</li>";
    echo "<li>‚úÖ $addedCategories yeni kategori eklendi</li>";
    echo "<li>‚úÖ Toplam " . count($categories) . " kategori mevcut</li>";
    echo "</ul>";
    echo "</div>";
    
    echo "<h4>Sonraki Adƒ±m:</h4>";
    echo "<p><a href='/' target='_blank' style='background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üè† Ana Sayfaya Git ve Header Dropdown'ƒ±nƒ± Test Et</a></p>";
    echo "<p><a href='quick-system-check.php' target='_blank' style='background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üîç Sistem Kontrol√º Yap</a></p>";

} catch(PDOException $e) {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 20px 0;'>";
    echo "<h4 style='color: #721c24;'>‚ùå Hata!</h4>";
    echo "<p style='color: #721c24;'>D√ºzeltme sƒ±rasƒ±nda hata olu≈ütu: " . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    max-width: 900px;
    margin: 20px auto;
    padding: 20px;
    background: #f8f9fa;
    line-height: 1.6;
}

h2, h3, h4 {
    color: #333;
}

table {
    background: white;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

th {
    background: #007bff;
    color: white;
}

a {
    text-decoration: none;
}

a:hover {
    opacity: 0.8;
}

hr {
    border: none;
    border-top: 2px solid #dee2e6;
    margin: 30px 0;
}
</style>
